---
  - name: Install yum dependencies
    yum:
      name:
      - bzip2-devel
      - curl
      - gcc
      - git
      - make
      - policycoreutils-python-utils
      - setools
      - tar
      - unzip
      - wget
      - zlib-devel
    tags: [ install-deps ]

  - name: Install build tools
    yum:
      name: "@Development tools"
      state: present
    tags: [ install-deps ]

  - name: Install Python 3.11
    shell: |
      curl -OL https://www.python.org/ftp/python/3.11.9/Python-3.11.9.tgz
      tar -xzf Python-3.11.9.tgz
      cd Python-3.11.9
      ./configure --enable-optimizations
      make altinstall
    args:
      creates: /usr/local/bin/python3.11
    tags: [ install-deps ]

  - name: Rsync aiohttp code
    synchronize:
      src: ../../../../rfam-batch-search
      dest: /srv
      rsync_opts:
        - "--exclude=/rfam-batch-search/.venv"
        - "--exclude=/rfam-batch-search/ansible"
        - "--exclude=/rfam-batch-search/terraform"
    tags: [ rsync ]

  - name: Delete logs directory
    file:
      path: /var/log/gunicorn
      state: absent
    ignore_errors: yes
    tags: [ logs ]

  - name: Create logs directory
    file:
      path: /var/log/gunicorn
      state: directory
      owner: cloud-user
      group: cloud-user
      mode: 0755
    tags: [ logs ]

  - name: Chown aiohttp code
    command: "chown -R cloud-user:cloud-user /srv/rfam-batch-search"
    changed_when: false
    tags: [ perm ]

  - name: Chmod aiohttp code
    command: "chmod 755 /srv/rfam-batch-search"
    tags: [ perm ]

  - name: Install poetry and other requirements
    shell: |
      cd /srv/rfam-batch-search
      /usr/local/bin/python3.11 -m venv .venv
      .venv/bin/pip install -U pip setuptools
      .venv/bin/pip install poetry==1.8.2
      .venv/bin/poetry install
    tags: [ poetry ]

  - name: Add gunicorn service
    copy:
      dest: /etc/systemd/system/gunicorn.service
      content: |
        [Unit]
        Description=Gunicorn daemon for the Rfam batch search
        After=network.target

        [Service]
        User=cloud-user
        Group=cloud-user
        WorkingDirectory=/srv/rfam-batch-search
        ExecStart=/srv/rfam-batch-search/.venv/bin/gunicorn -c gunicorn/gunicorn_conf.py -b 0.0.0.0:8000 main:app

        [Install]
        WantedBy=multi-user.target
      mode: 0750
    tags: [ systemd ]

  - name: Restart gunicorn
    systemd:
      state: restarted
      enabled: true
      daemon_reload: yes
      name: gunicorn
    tags: [ restart ]

  - name: Collect facts about system services
    service_facts:
    register: services_state
    tags: [ selinux ]

  - name: Fix SELinux issue
    shell: |
      # Set the appropriate context for the gunicorn binary
      chcon -t bin_t /srv/rfam-batch-search/.venv/bin/gunicorn
      systemctl restart gunicorn
    when: ansible_facts.services['gunicorn.service'].state == 'stopped'
    tags: [ selinux ]
